name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8
        
    - name: Run tests
      run: |
        pytest tests/ --cov=src --cov-report=xml
        
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
        
    - name: Check code formatting
      run: |
        black --check .
        isort --check-only .
        flake8 .

  build:
    needs: [test, lint]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Streamlit app
      uses: docker/build-push-action@v4
      with:
        context: .
        push: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}
        tags: ${{ secrets.DOCKER_USERNAME }}/mlops-streamlit:latest
        
    - name: Build and push MLflow
      uses: docker/build-push-action@v4
      with:
        context: .
        file: Dockerfile.mlflow
        push: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}
        tags: ${{ secrets.DOCKER_USERNAME }}/mlops-mlflow:latest

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to production
      run: |
        echo "Deploying to production..."
        # Add deployment steps here based on your hosting platform
        # For example: AWS ECS, Google Cloud Run, Azure Container Apps, etc. 
name: Docker Build and Test

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

env:
  STREAMLIT_PORT: 8999
  MLFLOW_PORT: 5000
  MODEL_URL: ${{ secrets.MODEL_URL }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        
    - name: Download model
      run: python src/download_model.py
      env:
        MODEL_URL: ${{ secrets.MODEL_URL }}
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build and start containers
      run: |
        docker compose build
        docker compose up -d
        
    - name: Wait for services to be ready
      run: |
        timeout 60s bash -c 'until curl -s http://localhost:${{ env.STREAMLIT_PORT }}; do sleep 5; done'
        timeout 60s bash -c 'until curl -s http://localhost:${{ env.MLFLOW_PORT }}; do sleep 5; done'
      
    - name: Check container logs
      if: always()
      run: |
        echo "=== Streamlit Logs ==="
        docker compose logs streamlit
        echo "=== MLflow Logs ==="
        docker compose logs mlflow
        
    - name: Run tests
      run: |
        pip install pytest
        pytest tests/
        
    - name: Stop containers
      if: always()
      run: docker compose down

  # Optional: Add deployment job if needed
  # deploy:
  #   needs: build-and-test
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
  #   steps:
  #     - name: Deploy to production
  #       run: echo "Add deployment steps here" 